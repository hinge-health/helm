---
# Source: hinge-service/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name:  acid-burn
  labels:
    helm.sh/chart: example-0.2.2
    app.kubernetes.io/name: crash-override
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    tags.datadoghq.com/env: "dev"
    tags.datadoghq.com/service: "acid-burn"
    tags.datadoghq.com/version: "latest"
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::123456789:role/development-acid-burn"
---
# Source: hinge-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: acid-burn
  labels:
    helm.sh/chart: example-0.2.2
    app.kubernetes.io/name: crash-override
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    tags.datadoghq.com/env: "dev"
    tags.datadoghq.com/service: "acid-burn"
    tags.datadoghq.com/version: "latest"
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
      name: 
  selector:
    app.kubernetes.io/name: crash-override
    app.kubernetes.io/instance: example
---
# Source: hinge-service/templates/deployment/additional.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: acid-burn-queue
  labels:
    helm.sh/chart: example-0.2.2
    app.kubernetes.io/name: crash-override
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    tags.datadoghq.com/env: "dev"
    tags.datadoghq.com/service: "acid-burn"
    tags.datadoghq.com/version: "latest"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: crash-override
      app.kubernetes.io/instance: example
      app.kubernetes.io/component: queue
  template:
    metadata:
      labels:
        helm.sh/chart: example-0.2.2
        app.kubernetes.io/name: crash-override
        app.kubernetes.io/instance: example
        app.kubernetes.io/version: "latest"
        app.kubernetes.io/managed-by: Helm
        tags.datadoghq.com/env: "dev"
        tags.datadoghq.com/service: "acid-burn"
        tags.datadoghq.com/version: "latest"
        app.kubernetes.io/component: queue
    spec:
      containers:
        - name: queue
          command:
            - /bin/sh
            - -c
            - node dist/src/queue.main
          args:
            null
          image: "905652836327.dkr.ecr.us-west-1.amazonaws.com/my-hinge-app:latest"
          imagePullPolicy: "Always"
          stdin: true
          tty: true
          env:
            
            - name: ANOTHER_USEFUL_ENVVAR
              value: "good_stuff_here"
            - name: DD_TRACE_AGENT_ENABLED
              value: "true"
            - name: USEFUL_ENVIRONMENT_VARIABLE
              value: "useful_value"
            - name: ANOTHER_USEFUL_AWS_SECRET
              valueFrom:
                secretKeyRef:
                  name: "acid-burn-aws"
                  key: "per_environment_secret_here"
            - name: USEFUL_AWS_SECRET
              valueFrom:
                secretKeyRef:
                  name: "acid-burn-aws"
                  key: "secret_key_in_aws"
            - name: AWS_REGION
              value: us-west-1
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/env']
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/version']
          securityContext:
              {}
          volumeMounts:
          - name: 'service-secrets'
            mountPath: '/mnt/secrets-store'
            readOnly: true
          resources:
            limits:
              cpu: 500m
              memory: 1024Mi
            requests:
              cpu: 250m
              memory: 512Mi
      serviceAccountName: acid-burn
      securityContext:
        {}
      volumes:
        - name: service-secrets
          csi:
            driver: 'secrets-store.csi.k8s.io'
            readOnly: true
            volumeAttributes:
              secretProviderClass: "acid-burn-aws"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - queue
              topologyKey: kubernetes.io/hostname
      tolerations: []
---
# Source: hinge-service/templates/deployment/additional.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: acid-burn-cron
  labels:
    helm.sh/chart: example-0.2.2
    app.kubernetes.io/name: crash-override
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    tags.datadoghq.com/env: "dev"
    tags.datadoghq.com/service: "acid-burn"
    tags.datadoghq.com/version: "latest"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: crash-override
      app.kubernetes.io/instance: example
      app.kubernetes.io/component: cron
  template:
    metadata:
      labels:
        helm.sh/chart: example-0.2.2
        app.kubernetes.io/name: crash-override
        app.kubernetes.io/instance: example
        app.kubernetes.io/version: "latest"
        app.kubernetes.io/managed-by: Helm
        tags.datadoghq.com/env: "dev"
        tags.datadoghq.com/service: "acid-burn"
        tags.datadoghq.com/version: "latest"
        app.kubernetes.io/component: cron
    spec:
      containers:
        - name: cron
          command:
            - /bin/sh
            - -c
            - node dist/src/cron.main
          args:
            null
          image: "905652836327.dkr.ecr.us-west-1.amazonaws.com/my-hinge-app:latest"
          imagePullPolicy: "Always"
          stdin: true
          tty: true
          env:
            
            - name: ANOTHER_USEFUL_ENVVAR
              value: "good_stuff_here"
            - name: DD_TRACE_AGENT_ENABLED
              value: "true"
            - name: USEFUL_ENVIRONMENT_VARIABLE
              value: "useful_value"
            - name: ANOTHER_USEFUL_AWS_SECRET
              valueFrom:
                secretKeyRef:
                  name: "acid-burn-aws"
                  key: "per_environment_secret_here"
            - name: USEFUL_AWS_SECRET
              valueFrom:
                secretKeyRef:
                  name: "acid-burn-aws"
                  key: "secret_key_in_aws"
            - name: AWS_REGION
              value: us-west-1
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/env']
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/version']
          securityContext:
              {}
          volumeMounts:
          - name: 'service-secrets'
            mountPath: '/mnt/secrets-store'
            readOnly: true
          resources:
            null
      serviceAccountName: acid-burn
      securityContext:
        {}
      volumes:
        - name: service-secrets
          csi:
            driver: 'secrets-store.csi.k8s.io'
            readOnly: true
            volumeAttributes:
              secretProviderClass: "acid-burn-aws"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - cron
              topologyKey: kubernetes.io/hostname
      tolerations: []
---
# Source: hinge-service/templates/deployment/main.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: acid-burn
  labels:
    helm.sh/chart: example-0.2.2
    app.kubernetes.io/name: crash-override
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    tags.datadoghq.com/env: "dev"
    tags.datadoghq.com/service: "acid-burn"
    tags.datadoghq.com/version: "latest"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: crash-override
      app.kubernetes.io/instance: example
  template:
    metadata:
      labels:
        app.kubernetes.io/name: crash-override
        app.kubernetes.io/instance: example
    spec:
      containers:
      - name: "main"
        image: "905652836327.dkr.ecr.us-west-1.amazonaws.com/my-hinge-app:latest"
        imagePullPolicy: "Always"
        stdin: true
        tty: true
        command:
          - /usr/bin/node
          - run
          - mydangapp.js
        args:
          null
        env:
        
        - name: ANOTHER_USEFUL_ENVVAR
          value: "good_stuff_here"
        - name: DD_TRACE_AGENT_ENABLED
          value: "true"
        - name: USEFUL_ENVIRONMENT_VARIABLE
          value: "useful_value"
        - name: ANOTHER_USEFUL_AWS_SECRET
          valueFrom:
            secretKeyRef:
              name: "acid-burn-aws"
              key: "per_environment_secret_here"
        - name: USEFUL_AWS_SECRET
          valueFrom:
            secretKeyRef:
              name: "acid-burn-aws"
              key: "secret_key_in_aws"
        - name: AWS_REGION
          value: us-west-1
        - name: DD_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: DD_ENV
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/env']
        - name: DD_SERVICE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/service']
        - name: DD_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/version']
        securityContext:
          null
        ports:
          - containerPort: 3000
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 2
          failureThreshold: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 3000
          initialDelaySeconds: 68
          periodSeconds: 10
          failureThreshold: 2
        resources:
          null
        volumeMounts:
        - name: 'service-secrets'
          mountPath: '/mnt/secrets-store'
          readOnly: true
      serviceAccountName: acid-burn
      securityContext:
        {}
      volumes:
        - name: service-secrets
          csi:
            driver: 'secrets-store.csi.k8s.io'
            readOnly: true
            volumeAttributes:
              secretProviderClass: "acid-burn-aws"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - acid-burn
              topologyKey: kubernetes.io/hostname
      tolerations: []
---
# Source: hinge-service/templates/hpa.yaml
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: acid-burn
  labels:
    helm.sh/chart: example-0.2.2
    app.kubernetes.io/name: crash-override
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    tags.datadoghq.com/env: "dev"
    tags.datadoghq.com/service: "acid-burn"
    tags.datadoghq.com/version: "latest"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: acid-burn
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 80
    - type: Resource
      resource:
        name: memory
        targetAverageUtilization: 80
---
# Source: hinge-service/templates/cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: acid-burn-cron-job
spec:
  schedule: "0 /12 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: acid-burn-cron-job
            command:
            - node
            - dist/src/cron.main
            image: "905652836327.dkr.ecr.us-west-1.amazonaws.com/my-hinge-app:latest"
            env:
            
            - name: ANOTHER_USEFUL_ENVVAR
              value: "good_stuff_here"
            - name: DD_TRACE_AGENT_ENABLED
              value: "true"
            - name: USEFUL_ENVIRONMENT_VARIABLE
              value: "useful_value"
            - name: ANOTHER_USEFUL_AWS_SECRET
              valueFrom:
                secretKeyRef:
                  name: "acid-burn-aws"
                  key: "per_environment_secret_here"
            - name: USEFUL_AWS_SECRET
              valueFrom:
                secretKeyRef:
                  name: "acid-burn-aws"
                  key: "secret_key_in_aws"
            - name: AWS_REGION
              value: us-west-1
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/env']
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/version']
            volumeMounts:
              - name: 'service-secrets'
                mountPath: '/mnt/secrets-store'
                readOnly: true
          volumes:
            - name: service-secrets
              csi:
                driver: 'secrets-store.csi.k8s.io'
                readOnly: true
                volumeAttributes:
                  secretProviderClass: "acid-burn-aws"
---
# Source: hinge-service/templates/backendingress.yaml
#
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: acid-burn-backend
  namespace: default
  labels:
    helm.sh/chart: example-0.2.2
    app.kubernetes.io/name: crash-override
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    tags.datadoghq.com/env: "dev"
    tags.datadoghq.com/service: "acid-burn"
    tags.datadoghq.com/version: "latest"
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/group.name: "development-backend-internal"
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-protocol: "HTTP"
    alb.ingress.kubernetes.io/healthcheck-path: "/"
    alb.ingress.kubernetes.io/healthcheck-port: "3000"
    alb.ingress.kubernetes.io/success-codes: "200,301"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/ssl-policy: "ELBSecurityPolicy-TLS-1-2-Ext-2018-06"
spec:
  rules:
    - host: acid-burn.development.k8s.hingehealth.dev
      http:
        paths:
          - path: /*
            pathType: ImplementationSpecific
            backend:
              service:
                name: acid-burn
                port:
                  number: 3000
---
# Source: hinge-service/templates/customerfacingingress.yaml
#
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: acid-burn-customer-facing
  namespace: default
  labels:
    helm.sh/chart: example-0.2.2
    app.kubernetes.io/name: crash-override
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    tags.datadoghq.com/env: "dev"
    tags.datadoghq.com/service: "acid-burn"
    tags.datadoghq.com/version: "latest"
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/group.name: "development-customer-facing-internet-facing"
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-protocol: "HTTP"
    alb.ingress.kubernetes.io/healthcheck-path: "/healthcheck"
    alb.ingress.kubernetes.io/healthcheck-port: "8080"
    alb.ingress.kubernetes.io/success-codes: "200"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/ssl-policy: "ELBSecurityPolicy-TLS-1-2-Ext-2018-06"
spec:
  rules:
    - host: my.hingehealth.dev
      http:
        paths:
          - path: /*
            pathType: ImplementationSpecific
            backend:
              service:
                name: acid-burn
                port:
                  number: 3000
---
# Source: hinge-service/templates/secretproviderclass.yaml
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  namespace: apps
  name: "acid-burn-aws"
spec:
  provider: aws
  secretObjects:
    - data:
      - key: per_environment_secret_here
        objectName: per_environment_secret_here
      - key: secret_key_in_aws
        objectName: secret_key_in_aws
      type: Opaque
      secretName: "acid-burn-aws"
  parameters:
    objects: |
      - objectName: legacy/acid-burn
        objectType: "secretsmanager"
        jmesPath:
          - path: secret_key_in_aws
            objectAlias: secret_key_in_aws
      - objectName: legacy/shared
        objectType: "secretsmanager"
        jmesPath:
          - path: per_environment_secret_here
            objectAlias: per_environment_secret_here
---
# Source: hinge-service/templates/preupgrademigrationhook.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "example-pre-install-migration"
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "-1"
spec:
  backoffLimit: 0
  template:
    metadata:
      name: "example-pre-install-migration"
    spec:
      restartPolicy: Never
      serviceAccountName: acid-burn
      containers:
      - name: acid-burn-db-schema-migration
        command:
        - /usr/bin/npm
        - run
        - db:migrate
        image: "905652836327.dkr.ecr.us-west-1.amazonaws.com/my-hinge-app:latest"
        env:
        
        - name: ANOTHER_USEFUL_ENVVAR
          value: "good_stuff_here"
        - name: DD_TRACE_AGENT_ENABLED
          value: "true"
        - name: USEFUL_ENVIRONMENT_VARIABLE
          value: "useful_value"
        - name: ANOTHER_USEFUL_AWS_SECRET
          valueFrom:
            secretKeyRef:
              name: "acid-burn-aws"
              key: "per_environment_secret_here"
        - name: USEFUL_AWS_SECRET
          valueFrom:
            secretKeyRef:
              name: "acid-burn-aws"
              key: "secret_key_in_aws"
        - name: AWS_REGION
          value: us-west-1
        - name: DD_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: DD_ENV
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/env']
        - name: DD_SERVICE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/service']
        - name: DD_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/version']
        volumeMounts:
          - name: 'service-secrets'
            mountPath: '/mnt/secrets-store'
            readOnly: true
      volumes:
        - name: service-secrets
          csi:
            driver: 'secrets-store.csi.k8s.io'
            readOnly: true
            volumeAttributes:
              secretProviderClass: "acid-burn-aws"
