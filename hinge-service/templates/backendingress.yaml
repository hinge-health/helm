{{- $fullName := include "hinge-service.fullName" . -}}
{{- $svcPort := .Values.servicePort -}}
{{- $clusterName := .Values.clusterName }}

{{- if .Values.backendIngressEnabled -}}

  # {{- if .Values.backendIngressExternalDomain }}
  #   {{- $externalDomain := .Values.backendIngressExternalDomain | default ""}}
  # {{- end }}

  {{- $internalDomain := .Values.backendIngressDomain }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullName }}-backend
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "hinge-service.labels" . | nindent 4 }}
  annotations:
    kubernetes.io/ingress.class: alb
  {{- if .Values.backendIngressAllowSourceCidrs }}
    alb.ingress.kubernetes.io/inbound-cidrs: {{ join "," .Values.backendIngressAllowSourceCidrs }}
  {{- end }}
  {{- if eq .Values.backendIngressInternal true }}
    alb.ingress.kubernetes.io/group.name: "{{.Values.clusterName}}-backend-internal"
    alb.ingress.kubernetes.io/scheme: internal
  {{- else }}
    alb.ingress.kubernetes.io/group.name: "{{.Values.clusterName}}-backend-internet-facing"
    alb.ingress.kubernetes.io/scheme: internet-facing
  {{- end }}
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-protocol: "{{ .Values.backendIngressHealthCheckProtocol }}"
    alb.ingress.kubernetes.io/healthcheck-path: "{{ .Values.backendIngressHealthCheckPath }}"
    alb.ingress.kubernetes.io/healthcheck-port: "{{ .Values.backendIngressHealthCheckPort | default .Values.containerPort }}"
    alb.ingress.kubernetes.io/success-codes: "{{ .Values.backendIngressHealthCheckSuccessCodes }}"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/ssl-policy: "ELBSecurityPolicy-TLS-1-2-Ext-2018-06"
  {{- if .Values.backendIngressCertificateArn }}
    alb.ingress.kubernetes.io/certificate-arn: "{{ .Values.backendIngressCertificateArn }}"
  {{- end }}
spec:
  rules:
{{- /* }}
  # Allows specifying backendIngress rules inside of the values file. Otherwise, just provides a single default path.
  # Do we need anything other than http?
{{- */}}
  {{- $backendIngressRules := .Values.backendIngressRules | default dict }}
  {{- if $backendIngressRules }}
    - http:
        paths:
        {{- range .paths }}
          - path: {{ .path }}
            backend:
              service:
                name: {{ .serviceName }}
                port:
                  number: {{ .servicePort }}
        {{- end }}
  {{- else }}
    - host: {{ $fullName }}.{{ $clusterName }}.{{ $internalDomain }}
      http:
        paths:
          - path: /*
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $.Values.servicePort | default $.Values.containerPort }}
  {{- end }}
{{- end }}
