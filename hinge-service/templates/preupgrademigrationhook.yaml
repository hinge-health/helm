{{- if .Values.preUpgradeHookEnabled -}}

{{- /* }}
Checks to see if AWS secrets are in use.
{{ */}}
{{- $awsSecretsEnabled := false -}}
{{- if .Values.awsSecretsService }}
  {{- $awsSecretsEnabled = true }}
{{- end }}
{{- if .Values.awsSecretsEnvironment }}
  {{- $awsSecretsEnabled = true }}
{{- end }}

apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-pre-install-migration"
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "-1"
spec:
  backoffLimit: 0
  template:
    metadata:
      name: "{{ .Release.Name }}-pre-install-migration"
    spec:
      restartPolicy: Never
      serviceAccountName: {{ include "hinge-service.fullName" $ }}
      containers:
      - name: {{ include "hinge-service.fullName" . }}-db-schema-migration
        command:
          {{- toYaml .Values.preUpgradeHookCommand | nindent 8 }}
        image: "{{ include "hinge-service.imageRepository" . }}:{{ .Values.imageTag }}"
        env:
        {{- include "hinge-service.envVars" . | nindent 8 }}
      {{- /* }}
      # For AWS secrets sync to work, we need to mount the secrets-store volume to the pod.
      # If we're not using AWS secrets, let's not bother mounting this.
      # Furthermore - none of our services have or will have persistent state outside of the
      # usual database culprits - if this changes, we'll need to change this to accommodate that.
      {{- */}}
      {{- if $awsSecretsEnabled }}
        volumeMounts:
          - name: 'service-secrets'
            mountPath: '/mnt/secrets-store'
            readOnly: true
      volumes:
        - name: service-secrets
          csi:
            driver: 'secrets-store.csi.k8s.io'
            readOnly: true
            volumeAttributes:
              secretProviderClass: "{{ include "hinge-service.fullName" $ }}-aws"
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}