{{- /* }}
The secretProviderClass given here is a component of the Kubernetes secrets-store CSI.
This ingests the secret from AWS, gets the correct JMESPath and generates the secret to be
synced into the correct Kubernetes secret.
The values for secretObjects and parameters is somewhat non-obvious, but this template does
the right thing.
{{- */}}

{{- $fullName := include "hinge-service.fullName" . -}}
{{- $awsRegion := required "awsRegion is required" .Values.awsRegion }}
{{- $clusterName := required "clusterName is required" .Values.clusterName  }}

{{- $awsSecretsEnabled := false }}
{{- if .Values.awsSecretsService }}
  {{- $awsSecretsEnabled = true }}
{{- end }}
{{- if .Values.awsSecretsEnvironment }}
  {{- $awsSecretsEnabled = true }}
{{- end -}}

{{ if $awsSecretsEnabled }}
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  namespace: apps
  name: {{ printf "%s-aws" $fullName | quote }}
spec:
  provider: aws
  secretObjects:
    - data:
      {{- range $secretName, $secretValue := .Values.awsSecretsEnvironment }}
      - key: {{ $secretValue }}
        objectName: {{ $secretValue }}
      {{- end }}
      {{- range $secretName, $secretValue := .Values.awsSecretsService }}
      - key: {{ $secretValue }}
        objectName: {{ $secretValue }}
      {{- end }}
      type: Opaque
      secretName: {{ printf "%s-aws" $fullName | quote }}
  parameters:
    objects: |
    {{- if .Values.awsSecretsService }}
      - objectName: legacy/{{ printf "%s" $fullName }}
        objectType: "secretsmanager"
        jmesPath:
        {{- range $secretName, $secretValue := .Values.awsSecretsService }}
          - path: {{ $secretValue }}
            objectAlias: {{ $secretValue }}
        {{- end }}
    {{- end }}
    {{- if .Values.awsSecretsEnvironment }}
      - objectName: legacy/shared
        objectType: "secretsmanager"
        jmesPath:
        {{- range $secretName, $secretValue := .Values.awsSecretsEnvironment }}
          - path: {{ $secretValue }}
            objectAlias: {{ $secretValue }}
        {{- end }}
    {{- end }}
{{- end }}